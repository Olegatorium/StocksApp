// <auto-generated />
using System;
using Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entity.Migrations
{
    [DbContext(typeof(StockMarketDbContext))]
    [Migration("20240315044319_Restrictions_BindProperties")]
    partial class Restrictions_BindProperties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.BuyOrder", b =>
                {
                    b.Property<Guid>("BuyOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAndTimeOfOrder")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("StockSymbol")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("BuyOrderID");

                    b.ToTable("BuyOrders", (string)null);

                    b.HasData(
                        new
                        {
                            BuyOrderID = new Guid("ec26e4cb-0dfb-4d88-88e2-4b540d4080c9"),
                            DateAndTimeOfOrder = new DateTime(2024, 3, 15, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            Price = 152.75,
                            Quantity = 50L,
                            StockName = "Apple Inc.",
                            StockSymbol = "AAPL"
                        },
                        new
                        {
                            BuyOrderID = new Guid("91d43927-f0db-42d1-b29e-665d191ef14f"),
                            DateAndTimeOfOrder = new DateTime(2024, 3, 15, 11, 45, 0, 0, DateTimeKind.Unspecified),
                            Price = 289.10000000000002,
                            Quantity = 100L,
                            StockName = "Microsoft Corporation",
                            StockSymbol = "MSFT"
                        },
                        new
                        {
                            BuyOrderID = new Guid("bfbd9c84-509d-4d43-ba5e-48e5fd6e76b4"),
                            DateAndTimeOfOrder = new DateTime(2024, 3, 15, 13, 15, 0, 0, DateTimeKind.Unspecified),
                            Price = 2650.5,
                            Quantity = 25L,
                            StockName = "Alphabet Inc.",
                            StockSymbol = "GOOGL"
                        });
                });

            modelBuilder.Entity("Entity.SellOrder", b =>
                {
                    b.Property<Guid>("SellOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAndTimeOfOrder")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("StockSymbol")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("SellOrderID");

                    b.ToTable("SellOrders", (string)null);

                    b.HasData(
                        new
                        {
                            SellOrderID = new Guid("4a6f9c2d-1ef4-4964-9f90-3e19ee55e68d"),
                            DateAndTimeOfOrder = new DateTime(2024, 3, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 3500.25,
                            Quantity = 75L,
                            StockName = "Amazon.com Inc.",
                            StockSymbol = "AMZN"
                        },
                        new
                        {
                            SellOrderID = new Guid("d75e6b25-b334-4f20-899d-7f8cb91e489c"),
                            DateAndTimeOfOrder = new DateTime(2024, 3, 15, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            Price = 900.5,
                            Quantity = 50L,
                            StockName = "Tesla Inc.",
                            StockSymbol = "TSLA"
                        },
                        new
                        {
                            SellOrderID = new Guid("f381d1f7-69cb-437b-9a39-53c778f98e8d"),
                            DateAndTimeOfOrder = new DateTime(2024, 3, 15, 15, 45, 0, 0, DateTimeKind.Unspecified),
                            Price = 575.75,
                            Quantity = 100L,
                            StockName = "NVIDIA Corporation",
                            StockSymbol = "NVDA"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
